// Generated by view binder compiler. Do not edit!
package com.example.nativemovieapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.chaek.android.RatingBar;
import com.example.nativemovieapp.R;
import eightbitlab.com.blurview.BlurView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class HomesliderItemBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final BlurView blurView;

  @NonNull
  public final FrameLayout imageContainer;

  @NonNull
  public final TextView moviePoint;

  @NonNull
  public final RatingBar movieRating;

  @NonNull
  public final TextView movieTitle;

  @NonNull
  public final TextView movieYear;

  @NonNull
  public final ImageView slideImg;

  @NonNull
  public final RelativeLayout sliderItem;

  private HomesliderItemBinding(@NonNull RelativeLayout rootView, @NonNull BlurView blurView,
      @NonNull FrameLayout imageContainer, @NonNull TextView moviePoint,
      @NonNull RatingBar movieRating, @NonNull TextView movieTitle, @NonNull TextView movieYear,
      @NonNull ImageView slideImg, @NonNull RelativeLayout sliderItem) {
    this.rootView = rootView;
    this.blurView = blurView;
    this.imageContainer = imageContainer;
    this.moviePoint = moviePoint;
    this.movieRating = movieRating;
    this.movieTitle = movieTitle;
    this.movieYear = movieYear;
    this.slideImg = slideImg;
    this.sliderItem = sliderItem;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static HomesliderItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static HomesliderItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.homeslider_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static HomesliderItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.blurView;
      BlurView blurView = ViewBindings.findChildViewById(rootView, id);
      if (blurView == null) {
        break missingId;
      }

      id = R.id.image_container;
      FrameLayout imageContainer = ViewBindings.findChildViewById(rootView, id);
      if (imageContainer == null) {
        break missingId;
      }

      id = R.id.movie_point;
      TextView moviePoint = ViewBindings.findChildViewById(rootView, id);
      if (moviePoint == null) {
        break missingId;
      }

      id = R.id.movie_rating;
      RatingBar movieRating = ViewBindings.findChildViewById(rootView, id);
      if (movieRating == null) {
        break missingId;
      }

      id = R.id.movie_title;
      TextView movieTitle = ViewBindings.findChildViewById(rootView, id);
      if (movieTitle == null) {
        break missingId;
      }

      id = R.id.movie_year;
      TextView movieYear = ViewBindings.findChildViewById(rootView, id);
      if (movieYear == null) {
        break missingId;
      }

      id = R.id.slide_img;
      ImageView slideImg = ViewBindings.findChildViewById(rootView, id);
      if (slideImg == null) {
        break missingId;
      }

      RelativeLayout sliderItem = (RelativeLayout) rootView;

      return new HomesliderItemBinding((RelativeLayout) rootView, blurView, imageContainer,
          moviePoint, movieRating, movieTitle, movieYear, slideImg, sliderItem);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
